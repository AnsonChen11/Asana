name: Deploy to Azure VM

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/asana-backend:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/asana-backend:latest

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Docker container on Azure VM
      run: |
        echo "${{ secrets.AZURE_VM_SSH_KEY }}" > private_key.pem
        chmod 600 private_key.pem 
        ssh -t -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_IP }} << EOF
          echo "Checking for running Docker containers..."
          CONTAINER_ID=\$(sudo docker ps -q --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/asana-backend:latest")
          
          if [ -n "\$CONTAINER_ID" ]; then
            echo "Stopping existing container: \$CONTAINER_ID"
            sudo docker stop \$CONTAINER_ID
            sudo docker rm \$CONTAINER_ID
          fi

          echo "Pulling the latest Docker image..."
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/asana-backend:latest
          
          echo "Running the new Docker container..."
          sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/asana-backend:latest
        EOF
